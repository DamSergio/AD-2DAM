-- TIPO PARTICIPACION
CREATE TYPE TIPO_PARTICIPA AS OBJECT(
    TIPOPARTICIPACION VARCHAR2(20),
    NUMESTUDIANTES NUMBER,
    SUMAAPORT NUMBER
);
/

-- VARRAR DE PARTICIPACIONES
CREATE TYPE VARRAY_PARTICIPA AS VARRAY(3) OF TIPO_PARTICIPA;
/

-- TIPO ENTIDAD
CREATE TYPE TIPO_ENTIDAD AS OBJECT(
    codentidad number(10,0),
	descripcion varchar2(30),
	telefono varchar2(10),
	direccion varchar2(40),
	contacto varchar2(30)
);
/

-- CREO UNA TABLA DE TIPO_ENTIDAD Y LA RELLENO
CREATE TABLE OBJ_ENTIDAD OF TIPO_ENTIDAD(
    CODENTIDAD PRIMARY KEY
);
/
INSERT INTO OBJ_ENTIDAD SELECT * FROM ENTIDADES;
/

CREATE TYPE TIPO_PATROCINA AS OBJECT(
    codpatrocinio number(10,0),
	ENTIDAD REF TIPO_ENTIDAD,
	importeaportacion float,
	fechaaportacion date
);
/

-- CREO LA TABLA ANIDADA
CREATE TYPE ANIDADA_PATROCINA AS TABLE OF TIPO_PATROCINA;
/

-- TIPO PROYECTO
CREATE TYPE TIPO_PROYECTO AS OBJECT(
    codigoproyecto number(10,0),
	nombre varchar2(45),
	fechainicio date,
	fechafin date,
	presupuesto float,
	extraaportacion float,
    
    PATROCINADORES ANIDADA_PATROCINA,
    INFORMACION VARRAY_PARTICIPA,
    
    MEMBER FUNCTION TOTAL_APORTACION(TIPO VARCHAR2) RETURN NUMBER
);
/

-- CREO EL CUERPO
CREATE OR REPLACE
TYPE BODY TIPO_PROYECTO AS

  MEMBER FUNCTION TOTAL_APORTACION(TIPO VARCHAR2) RETURN NUMBER AS
    TOTAL NUMBER := 0;
  BEGIN
    FOR I IN 1 .. INFORMACION.COUNT LOOP
        IF INFORMACION(I).TIPOPARTICIPACION = TIPO THEN
            TOTAL := TOTAL + INFORMACION(I).SUMAAPORT;
        END IF;
    END LOOP;
    
    TOTAL := TOTAL * EXTRAAPORTACION;
    
    RETURN TOTAL;
  END TOTAL_APORTACION;

END;
/

-- CREO LA TABLA 
CREATE TABLE OBJPROYECTOS OF TIPO_PROYECTO(
    CODIGOPROYECTO PRIMARY KEY
)
NESTED TABLE PATROCINADORES STORE AS TABLA_ANIDADA_PATROCINADORES;
/

-- EMPIEZO A RELLENAR LA TABLA
INSERT INTO OBJPROYECTOS 
    SELECT CODIGOPROYECTO, NOMBRE, FECHAINICIO, FECHAFIN, PRESUPUESTO, EXTRAAPORTACION, ANIDADA_PATROCINA(), VARRAY_PARTICIPA()
    FROM PROYECTOS;
/

-- RELLENO LA TABLA ANIDADA Y EL VARRAY
DECLARE
    CURSOR PROYECTOS IS SELECT * FROM OBJPROYECTOS;
    CURSOR PATROCINADORES(CODI VARCHAR2) IS SELECT CODPATROCINIO COD, REF(E) ENTIDAD, IMPORTEAPORTACION, FECHAAPORTACION
        FROM PATROCINA P JOIN OBJ_ENTIDAD E ON P.CODENTIDAD = E.CODENTIDAD WHERE CODIGOPROYECTO = CODI;
    
    TABLA_PATROCINA ANIDADA_PATROCINA;
    
    CURSOR INFORMACION(CODI VARCHAR2) IS SELECT TIPOPARTICIPACION, COUNT(*) NUMES, SUM(NUMAPORTACIONES) SUMA
        FROM PARTICIPA WHERE CODIGOPROYECTO = CODI GROUP BY TIPOPARTICIPACION;
    
    VARRAY_INFO VARRAY_PARTICIPA;
BEGIN
    FOR P IN PROYECTOS LOOP
        TABLA_PATROCINA := ANIDADA_PATROCINA();
        FOR PATRO IN PATROCINADORES(P.CODIGOPROYECTO) LOOP
            TABLA_PATROCINA.EXTEND;
            TABLA_PATROCINA(TABLA_PATROCINA.COUNT) := TIPO_PATROCINA(PATRO.COD, PATRO.ENTIDAD, PATRO.IMPORTEAPORTACION, PATRO.FECHAAPORTACION);
        END LOOP;
        
        VARRAY_INFO := VARRAY_PARTICIPA();
        FOR I IN INFORMACION(P.CODIGOPROYECTO) LOOP
            VARRAY_INFO.EXTEND;
            VARRAY_INFO(VARRAY_INFO.COUNT) := TIPO_PARTICIPA(I.TIPOPARTICIPACION, I.NUMES, I.SUMA);
        END LOOP;
        
        UPDATE OBJPROYECTOS SET PATROCINADORES = TABLA_PATROCINA, INFORMACION = VARRAY_INFO WHERE CODIGOPROYECTO = P.CODIGOPROYECTO;
    END LOOP;
END;
/

---------------------------------------------------------------------------------------------------------------------------
-- CONSULTAS --------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------

-- CONSULTA 1
SELECT CODIGOPROYECTO, NOMBRE, P.TOTAL_APORTACION('Becario') EXTRABECARIOS, P.TOTAL_APORTACION('Investigador') EXTRAINVESTIGADORES, P.TOTAL_APORTACION('Ayudante nivel 1') EXTRAAYUDANTES 
FROM OBJPROYECTOS P;
/

-- CONSULTA 2
SELECT P.CODIGOPROYECTO, P.NOMBRE, SUM(PATRO.IMPORTEAPORTACION) SUMAIMPORTAAPORTACION, COUNT(PATRO.IMPORTEAPORTACION) NUMPATROCINADORES
FROM OBJPROYECTOS P, TABLE(PATROCINADORES) PATRO
GROUP BY P.CODIGOPROYECTO, P.NOMBRE
ORDER BY P.CODIGOPROYECTO;
/