CREATE OR REPLACE TYPE TIPO_RESUMEN AS OBJECT(
    clase VARCHAR2(10),
    pasajeros NUMBER(4),
    sumapvp float
);
/

CREATE OR REPLACE TYPE VARRAY_RESUMEN AS VARRAY(3) OF TIPO_RESUMEN;
/

CREATE OR REPLACE TYPE TIPO_VUELO1 AS OBJECT(
    IDENTIFICADOR VARCHAR2(10),
    AEROPUERTO_ORIGEN VARCHAR2(10),
    AEROPUERTO_DESTINO VARCHAR2(10),
    TIPO_VUELO VARCHAR2(15),
    FECHA_VUELO DATE, 
    RESUMEN VARRAY_RESUMEN,
    
    MEMBER FUNCTION NUMERO_PASAJEROS RETURN NUMBER,
    MEMBER FUNCTION PVP_TOTAL RETURN NUMBER,
    MEMBER FUNCTION PASAJEROS_CLASE(clase VARCHAR2) RETURN NUMBER
);
/

CREATE OR REPLACE TYPE BODY TIPO_VUELO1 AS
    MEMBER FUNCTION NUMERO_PASAJEROS RETURN NUMBER IS
        suma NUMBER := 0;
    BEGIN
        FOR i IN 1 .. RESUMEN.COUNT LOOP
            suma := suma + RESUMEN(i).pasajeros;
        END LOOP;
        
        RETURN suma;
    END;
    
    MEMBER FUNCTION PVP_TOTAL RETURN NUMBER IS
        pvp NUMBER := 0;
    BEGIN
        FOR i IN 1 .. RESUMEN.COUNT LOOP
            pvp := pvp + RESUMEN(i).sumapvp;
        END LOOP;
        
        RETURN pvp;
    END;
    
    MEMBER FUNCTION PASAJEROS_CLASE(clase VARCHAR2) RETURN NUMBER IS
        suma NUMBER := 0;
    BEGIN
        IF (clase NOT IN('PRIMERA', 'TURISTA', 'BUSINESS')) THEN
            RETURN 0;
        END IF;
        
        FOR i IN 1 .. RESUMEN.COUNT LOOP
            IF (RESUMEN(i).clase = clase) THEN
                suma := suma + 1;
            END IF;
        END LOOP;
    END;
END;
/

DROP TABLE TABLA_VUELO1;

CREATE TABLE TABLA_VUELO1 OF TIPO_VUELO1(
    identificador PRIMARY KEY
);
/

INSERT INTO TABLA_VUELO1 SELECT identificador, aeropuerto_origen, aeropuerto_destino, tipo_vuelo, fecha_vuelo, VARRAY_RESUMEN() FROM vuelo;
/

CREATE OR REPLACE PROCEDURE llenarVuelos1 as
    CURSOR vuelos IS SELECT * FROM TABLA_VUELO1;
    CURSOR resumenes(ident VARCHAR2) IS SELECT clase, COUNT(*)pas, SUM(pvp)pvp FROM pasaje WHERE identificador = ident GROUP BY clase ORDER BY clase;
BEGIN
    FOR vuelo IN vuelos LOOP
        FOR resu IN resumenes(vuelo.identificador) LOOP
            vuelo.resumen.EXTEND;
            vuelo.resumen(vuelo.resumen.COUNT) := TIPO_RESUMEN(resu.clase, resu.pas, resu.pvp);
        END LOOP;
        
        UPDATE TABLA_VUELO1 SET resumen = vuelo.resumen WHERE identificador = vuelo.identificador;
    END LOOP;
END;
/

DECLARE
BEGIN
    llenarVuelos1();
END;
/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- PARTE 2 --------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TYPE TIPO_PASAJERO AS OBJECT(
    COD smallint,
	NOMBRE varchar2(30),
	TLF varchar2(10),
	DIRECCION varchar2(40),
	PAIS varchar2(15)
);
/

CREATE TABLE OBJPASAJERO OF TIPO_PASAJERO;
/
INSERT INTO OBJPASAJERO SELECT * FROM PASAJERO;
/

CREATE TYPE TIPO_PASAJE AS OBJECT(
    PASAJERO_COD REF TIPO_PASAJERO,
	NUMASIENTO smallint,
	CLASE varchar(10),
	PVP float
);
/

CREATE TYPE ANIDADA_PASAJE AS TABLE OF TIPO_PASAJE;
/
CREATE TYPE ANIDADA_PASAJERO AS TABLE OF TIPO_PASAJERO;
/

CREATE TYPE TIPO_VUELO2 AS OBJECT(
    IDENTIFICADOR VARCHAR2(10),
    AEROPUERTO_ORIGEN VARCHAR2(10),
    AEROPUERTO_DESTINO VARCHAR2(10),
    TIPO_VUELO VARCHAR2(15),
    FECHA_VUELO DATE,
    PASAJE ANIDADA_PASAJE,
    
    MEMBER FUNCTION PASAJERO_ASIENTO(N NUMBER) RETURN TIPO_PASAJERO,
    MEMBER FUNCTION PASAJEROS_CLASE (CLASE VARCHAR2) RETURN ANIDADA_PASAJERO
);
/

-- LAS TABLAS ANIDADAS SE TRATAN IGUAL QUE LOS VARRAYS
-- CREO LA TABLA OBJVUELO DE OBJETOS TIPO_VUELO2 CON UNA TABLA ANIDADA
CREATE TABLE OBJVUELO OF TIPO_VUELO2(
    IDENTIFICADOR PRIMARY KEY
)
NESTED TABLE PASAJE STORE AS PSJ_ANIDADA
;
/

-- RELLENO ESTA TABLE CON LA TABLA ANIDADA VACIA
INSERT INTO OBJVUELO
SELECT IDENTIFICADOR, AEROPUERTO_ORIGEN, AEROPUERTO_DESTINO, TIPO_VUELO, FECHA_VUELO, ANIDADA_PASAJE() FROM VUELO;
/

-- RELLENO LA TABLA ANIDADA
CREATE OR REPLACE PROCEDURE LLENAR_VUELOS2
IS
    CURSOR VUELOS IS SELECT * FROM OBJVUELO;
    CURSOR PASAJES(IDE VARCHAR2) IS SELECT REF(P) PASA, NUMASIENTO, CLASE, PVP FROM PASAJE PA JOIN OBJPASAJERO P ON PA.PASAJERO_COD = P.COD WHERE IDENTIFICADOR = IDE;
    PA TIPO_PASAJE;
    TABLA_PASAJE ANIDADA_PASAJE;
BEGIN
    FOR VUELO IN VUELOS LOOP
        TABLA_PASAJE := ANIDADA_PASAJE();
        
        FOR PAS IN PASAJES(VUELO.IDENTIFICADOR) LOOP
            PA := TIPO_PASAJE(PAS.PASA, PAS.NUMASIENTO, PAS.CLASE, PAS.PVP);
        
            TABLA_PASAJE.EXTEND;
            TABLA_PASAJE(TABLA_PASAJE.COUNT) := PA;
        END LOOP;
        
        UPDATE OBJVUELO SET PASAJE = TABLA_PASAJE WHERE IDENTIFICADOR = VUELO.IDENTIFICADOR;
    END LOOP;
END;
/

-- CONSULTAS
SELECT V.IDENTIFICADOR, COALESCE(V.PASAJERO_ASIENTO(30).NOMBRE, 'NO HAY') FROM OBJVUELO V;
/

SELECT V.IDENTIFICADOR, P.NOMBRE FROM OBJVUELO V, TABLE(V.PASAJEROS_CLASE('TURISTA')) P WHERE IDENTIFICADOR = 'BRU-1234';
/

SELECT P.NOMBRE FROM THE (SELECT V.PASAJEROS_CLASE('TURISTA') FROM OBJVUELO V WHERE IDENTIFICADOR = 'BRU-1234') P;
/

-- PROCEDURE
CREATE OR REPLACE PROCEDURE LISTADO(IDE VARCHAR2, CLASE VARCHAR2) AS
    CURSOR PASAJEROS IS SELECT P.NOMBRE NOM FROM THE (SELECT V.PASAJEROS_CLASE(CLASE) FROM OBJVUELO V WHERE IDENTIFICADOR = IDE) P;
    LLENO NUMBER := 0;
BEGIN
    DBMS_OUTPUT.PUT_LINE('IDENTIFICADOR: ' || IDE || ' ****** CLASE: ' || CLASE);

    FOR P IN PASAJEROS LOOP
        DBMS_OUTPUT.PUT_LINE('    ' || P.NOM);
        LLENO := 1;
    END LOOP;
    
    IF (LLENO = 0) THEN
        DBMS_OUTPUT.PUT_LINE('    NO HAY PASAJEROS');
    END IF;
END;
/

DECLARE
BEGIN
    Listado('IBE-762', 'TURISTA');
    Listado('BRU-1234', 'BUSINESS');
END;
/